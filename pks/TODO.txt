[보충 작업]
    [완] 이미지 업로드되면 task() 돌리기
    [완] maukitest.cloudapp.net 시절 업로드되었던 이미지들의 URL 처리;;;
    [완] Face 인식되면 성별은 태그로 달기
    [완] imageType, celebrity 등에서도 정보를 뽑아 태그로 달기
    [ing] 태스크 호출 구조 변경 : 객체 생성시 바로 하도록...
    가져오기시 보여지는 Contents 범위 조정 : 전반적으로 체크 필요
    동일한 사진 한번만 보이게 수정

[애저 Vision API]
    [완] RawFile 사이즈 변경 처리
    [완] AzurePrediction 구현 및 현 이미지에 대해 모두 호출
    [ing] 태그 구조 변경 : 확률, tagger 반영
        [완] ImageTags 작업
        PlaceNoteTags 작업
            ptag 는 쓰지 않고 ctag 만 사용 : Content Tag 만
            json type 으로 : {tag: 2, prob: 0.9, tagger: 1}
        PlaceNoteTag 삭제
        Tag 간 관계에 의한 확률 계산 방식 변경
            min 확률에서 조정이 일어나도록 : 현재는 50%

[이미지로 장소 판단]
    동일 이미지 인식 처리

[파헤치기]
    get_or_create_child() 관련
    앨범 import 후 장소화된 장소, 자동으로 take 처리

[예외 처리]
    깨진 rf, img 처리


[장소화 지원]
    주변 장소 목록 가져오기 : 다음, 구글

[Bug Fix]
    [완] 상수형, uplace 에 나오는 장소인데 iplaces 에 나오는 버그 수정
    [완] 이메일 인증 암호화 잘못 구현한 부분 수정 (/vds/confirm/ 은 user 로그인 전에 동작)

[오픈 준비]
    regions API 결과 캐싱 및 Celery 처리
        캐싱 프레임워크 구현 및 적용
            [완] Redis 설치 및 관련 작업 : 모듈 업그레이드 및 소스 변경, DB converting (imagehash 가 바뀌었음)
            [완] regions API 에 적용 : Celery 와 연계
        더더욱 count 가 맞지 않을 수 있으므로 앱에서 N+ 처리 필요
    [완] regions API 수정 : 대표 썸네일 내려보내기
    [완] 이메일 인증
        confirm 결과 UI 구현
    [ing] 이메일 인증하지 않고도 서비스 사용에 지장 없는지 테스트 필요

[imgur 형태에 맞춘 향후 개발 순서]
    Loginless Service : 오픈 준비하면서 최종 완료
    Image Tag : 금방 가능
    Tag Extractor from Image 1차
        일단 돈 들여서 구글꺼 붙이자...
    Place Extractor from Image 1차
        1차 Tag Extractor 를 이용하여 기존 검색엔진에서의 검색 결과를 활용하여 구현
    Deep Learning
        Tag Extractor from Image 2차
        Place Extractor from Image 2차
        
[개발중 생각난 것들]
    ImagesImporter, 동시 실행 방지를 redis cache.lock() 을 이용하여 구현


[튜닝]
    나중 혹은 다른 분께 요청

[Bug Fix]
    [완] 음수 좌표로 장소화가 안되는 버그 수정
    [완] timestamp 가 없는 이미지를 어드민에서 표시할 때의 버그 수정
    [완] 망고플레이트 direct 장소화
    [완] parent post 상속 받을 때 region 속성만 받기
        for 장소화된 URL 에 의해 자동 장소화된 UserPlace.userPost 의 images, 현실적으로 수정
    [완] 망고플레이트 장소화 시 대표이미지 썸네일 생성이 제대로 되지 않는 문제 수정
    [완] 개발환경에서는 문제가 없는데 실환경에서는 에러나는 문제 해결 (content 쪽. 상기 항목 관련)
        파일 다 지우고 새로 하면 잘 됨;;; access 는 되지 않은 상태에서 summarize 를 호출하면 발생하는 문제

[이것저것]
    [완] Celery 안되는 문제 해결
        ~/.bashrc 에 하기 라인 삽입
            export DJANGO_SETTINGS_MODULE=pks.settings
    [완] ImagesImporter
        임포트하고, 또 임포트하는 경우에 대한 처리
    [완] 셀러리 처리 부활
    [완] guide 로 Proxy 조회하는 부분 개선
        일단 guide 생성 후 수정하지만 않으면 문제없고, 실섭에선 문제 없으므로 pass
    
    [보류] 구글 장소화
    [보류] 네이버/다음, 지하철역은 다른 key 를 쓰고 있음;;;

[상세화]
    대충 장소화를 하고, 이후 다시 자세하게 장소화

[크롤링]
    장소화가 되지 않은 장소 주변의 장소 정보 크롤링
    블로그 import 및 타겟 크롤링

[장소화된 Content]
    [완] Url class 에 관련 기능 구현하기
    [완] UserPlace 를 상속한 child UserPlace 관련 기능 구현
    [완] Content 가 장소화되면, 해당 Content 를 참조하는 모든 UserPlace 를 바로 장소화
        [완] Url.add_place()
        [완] Url.remove_place()
    [완] 실시간 장소화 시, 장소화된 Content 가 있으면 이걸로 곧바로 장소화 하도록 수정
    [보류] URL 1개만 있는 UserPlace 장소화시, UserPlace 뿐만 아니라 URL 도 장소화하기
        이건 나중에 task 에서 처리...

[Tuning]
    cls.objects.get_or_create() 내부에서 get_queryset() 을 사용하고 있다
        이거의 정체가 무엇인지 정확히 파악하고 튜닝
        아예 이걸 사용안하고 다른걸 사용하여 Tuning 하는 방법도 있다
    캐시서버 적용
    Post, Region 등 무거운 사항들에 대한 결과를 DB 에 저장

[Task]
    Content 장소화
    Place Merge

[장소화 어드민 개선]
    공간/시간 거리 기준 가까운 관련 정보들 추가 출력 : Placed UserPlace, 사진.
    자체 DB 를 활용한 장소화 기능 만들기
    위치 트래킹 정보 보여주기

[regions API 개선]
    1차 : 국가별 Clustering
    2차 : 현재 알고리즘 - 1차 Clustering 이후 30개 넘는 Region 에 대해서만
    3차 : 2차 이후 30개 미만인 Region 들끼리 뭉치기. 뭉친 결과로 인해 30개 이상인 Region 과의 intersection 이 생기지 않도록
    개수가 30 개 미만인 경우 더 뭉쳐서 크게...
    알고리즘을 바꾸는 것도 검토 : k-means 등

[테스트 보강]
    다른 사람이 drop 한 경우에도 나한테는 drop 이 아니어야 하는 테스트 추가

[ImageHash]
Wavelet Hash 관련 R&D
phash 가 바뀌었음. 다시 실험 필요. whash 와 비교 실험




NLL 개선 : prior, likelyhood 계산방식 개선

summarize 관련 리팩토링
    네이버, 카카오 요약 json 만들때 PostBase 이용하기

clear_rfs_smart() 제대로 동작하지 않는 문제 수정 : 테스트로 생성된 중복된 파일들이 symbolic link 로 정리가 되지 않음...

ImagesImporter, 보안 처리 : myself 아닌 걸로 넘어올 때의 처리, tests.py 보강


해외 처리
    VD 의 국가/언어/타임존 활용
    어드민 맵 띄우는 부분 처리 
포스퀘어 장소화 구현
구글 장소화 구현


같은 장소 Merge


블로그 임포트 등

Clustering 관련 모듈들 리팩토링

퍼미션 처리
허용 HTTP Request 만 처리
    OPTIONS 는 완전 제거
    

장소화 로직 정리해서 모으기


get_queryset(), get_object() 리팩토링 


Content.get_from_json() 에서 에러 났을 때 empty UserPlace 가 저장되는 버그 처리 

VD.timezone 처리

URL redirect 처리
    Content.same 처리 구조 잡기
    네이버맵 모바일용 단축 URL 처리




위치 트래킹
API 호출 이력
지도 바로가기


Import 체계를 위한, UserPlaceSerializer 분리
    List 용과 Retrieve 용을 분리 : Retrieve 용을 별도 신설해서 특수 처리




같은 장소로 판정된 UserPlace, Place Merge
    --> 특히 다른 VD  인데 같은 Place 인 UserPlace 가 있는 경우



URL 리다이렉션 처리

UserPlace, Place 컬럼값들 채워지는 로직 전반적으로 체크


자동 장소화 추가 구현


더 이상 DB 리셋이 필요 없을지 체크 

장소화 어드민 만들기

MAMMA 에 의한 장소화, FULL 구현

python module import 부분 정리


UserPost 모아 PlacePost 생성하는 로직


전화번호 파싱 시 국가 처리

RU 단위로 잘 처리되는지 테스트 추가

mhash, dhash 처리하는 부분 장고 Celery 로 구현

Content accessed 캐시쪽 미구현 사항 구현

[Later]
Admin 사이트 로그인 테스트 기능 추가
user-detail 뷰가 없을 시, 단위테스트에서는 문제가 없는데 브라우저에서는 에러가 나는 상황 파악 및 해결
VD.owner 저장하는 부분 로직 튜닝
register, login 등 RESTfull 하지 않은 API 들에 대한 재검토
이메일 인증 처리
Permission 관련 구현 추가
불필요해 보이는 Interface, 사무실/개발전용 Permission 으로 해결
exif_lib.py 리팩토링 및 튜닝

AID 개선 : timestamp 값을 Model.lastModified 기반으로 처리되도록 변경
    --> for 캐싱
최상위 Model 만들고, AID, 캐싱, Permission 등 처리
테스트 후 파일 삭제 로직 만들기

같은 uuid 를 가지는 이미지가 올라왔을 때 처리


!!!
서버에 무조건 접속 베이스로 구현 변경
VD 속성에 Country, Language 추가
위치 트래킹 기능 추가

PlaceContent Tuning : flat 하게 흩어져 있는 속성들 합치기
Content Tuning : base class 만들고, image/url 합치기, 이거 하면서 hash 충돌 문제도 체크하기

Place.parent, Place.representative 속성 만들고 구현하기

해시 collision 해결 : collision 이 발생하면 앞에 공백을 붙여서 다시 재시도
Point 타입에 왜 gist 인덱스가 걸려 있는지 확인
content 조회를 파일 access 로 바꾸면서, uuid 조회는 join 을 하지 않도록 수정
Post 관련 Tuning : Foreign Key 를 끊어서, Content 모델 조회 없이 바로 uuid 를 저장하도록. 혹은 content 값에서 double check 를 하거나 (CPU 만 쓰면 되므로)

Serializer 로 데이터를 넘기는 방법이 파악되었으니, 필요한 곳에 이를 이용하여 리팩토링
    --> perform_create()
    
get_queryset() 에 의존한 검색 구현, filter_queryset() 활용 여지가 있는지 파악하기
